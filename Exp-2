{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "fe8959ab-db33-4d08-be66-25fd94a25c5b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Data saved to 'modified_data.csv'\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Name</th>\n",
       "      <th>Age</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Salary</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Alice</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Bob</td>\n",
       "      <td>0.25</td>\n",
       "      <td>1</td>\n",
       "      <td>0.008696</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Charlie</td>\n",
       "      <td>0.50</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Alice</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Dave</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      Name   Age Gender    Salary\n",
       "0    Alice  0.00      0  0.000000\n",
       "1      Bob  0.25      1  0.008696\n",
       "2  Charlie  0.50      1       NaN\n",
       "3    Alice  0.00      0  0.000000\n",
       "4     Dave  1.00      1  1.000000"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "from sklearn.preprocessing import MinMaxScaler\n",
    "\n",
    "df = pd.read_csv('dirty_data.csv')\n",
    "\n",
    "if 'JoinDate' in df.columns:\n",
    "    df['JoinDate'] = pd.to_datetime(df['JoinDate'], errors='coerce')\n",
    "\n",
    "if 'Gender' in df.columns:\n",
    "    df['Gender'] = df['Gender'].astype(str).str.lower()\n",
    "    df['Gender'] = df['Gender'].replace({'male': 1, 'female': 0})\n",
    "    df['Gender'] = df['Gender'].fillna(-1).replace('unknown', -1)\n",
    "\n",
    "scaler = MinMaxScaler()\n",
    "for col in ['Salary', 'Age']:\n",
    "    if col in df.columns:\n",
    "        df[[col]] = scaler.fit_transform(df[[col]])\n",
    "\n",
    "if 'JoinDate' in df.columns and 'Salary' in df.columns:\n",
    "    df['Month'] = df['JoinDate'].dt.to_period('M')\n",
    "    monthly_salary = df.groupby('Month')['Salary'].sum().reset_index()\n",
    "    monthly_salary.columns = ['Month', 'Total_Salary']\n",
    "    monthly_salary['Month'] = monthly_salary['Month'].astype(str)\n",
    "    monthly_salary.to_csv('monthly_salary.csv', index=False)\n",
    "    print(\"Data saved to 'monthly_salary.csv'\")\n",
    "\n",
    "df.to_csv('modified_data.csv', index=False)\n",
    "print(\"Data saved to 'modified_data.csv'\")\n",
    "df.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "438424e5-7bc9-475f-a00e-ee3d640a3276",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:base] *",
   "language": "python",
   "name": "conda-base-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
